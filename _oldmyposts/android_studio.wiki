== Android Studio ==
*2013-06-21 13:03:14*
_android_
`android开发`
`android studio`
----
%toc
=== ~/gitignore ===
~/gitignore:
{{{class="brush bash"
build/
.gradle/
workspace.xml
}}}
=== 模拟器 ===
我这从Android Studio运行avd会上不了网 但是从命令行运行正常

`emulator64-arm -avd 4.0` (需要将sdk的tools目录加入PATH环境变量)
=== 工程操作 ===
* 创建android module
不能用project上右键里的new module, 要用主菜单File菜单下的new module
新项目显示资源错误需要先Make(Ctrl+F9)一下
* 删除module
需要自己在.idea/modules.xml中删除相应moudle, 并手动在磁盘上删除对应的module文件夹
* 导入module
File->import module… 然后对.idea/modules,settings.gradle和新module的iml文件一阵鼓捣…
=== gradlew ===
* gradlew帮助: `./gradlew tasks`
* clean gradle: `./gradlew clean`
* 编译工程内所有apk: `./gradlew assembleRelease`
* 只编译某个module的apk: 进入module的目录下运行`../gradlew assembleRelease` 生成的apk在`<module>/build/apk`下
* 编译调试apk(debug签名): `./gradlew build` 生成的apk在`<module>/build/apk`下
==== gradlew生成签名apk ====
# 在module文件夹下的`build.gradle`文件中添加:
  {{{class="brush: bash"
  android {
      signingConfigs {
          releaseConfig {
              storeFile file("/path/to/xxx.keystore")
              storePassword "xxyyzz"
              keyAlias "xxx"
              keyPassword "xxyyzz"
          }
      }
  }
  }}}
  `signingConfigs`块添加在`android`块里面
# `../gradlew assembleRelease`
==== 代码混淆 ====
# 在module文件夹下的`build.gradle`文件中添加:
  {{{class="brush: bash"
  android {
      buildTypes {
          release {
              runProguard true
              proguardFile file('../proguard-project.txt')
              proguardFile getDefaultProguardFile('proguard-android.txt')
              signingConfig signingConfigs.releaseConfig
          }
  
  }
  }}}
  `buildTypes`块添加在`android`块里面
# `../gradlew assembleRelease`
=== 问题 ===
==== cannot resolve symbol 'R' ====
[http://stackoverflow.com/a/18183656/2775335 A simple 'gradlew clean' and 'gradlew build' did the trick.]
==== 类似eclipse的Ctrl+Shift+O的自动导入 ====
* File -> Settings -> Editor -> Auto Import, "Insert imports on paste"选ALL,勾全打上
* 参见: http://stackoverflow.com/a/16616085/2775335
